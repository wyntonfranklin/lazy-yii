<?php
/**
 * Created by PhpStorm.
 * User: shady
 * Date: 5/27/18
 * Time: 7:43 PM
 */

Yii::import('zii.widgets.CPortlet');
Yii::import('application.extensions.LazyModel.LazyElements');
Yii::import('application.extensions.LazyModel.LazyButtons');

class LazyModel extends CPortlet
{


    private $_model;
    public $model;
    private $_form;
    public $cssClass;
    public $validation=false;
    public $clientValidation=false;
    public $elements;
    public $form;
    public $buttons;
    public $summaryText='';
    public $formid;
    public $action;
    public $method ='post';
    public $buttonsClass= 'row buttons';



    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        $this->_model = $this->model;
        $this->setForm();
        $this->registerScripts();
    }


    protected function registerScripts()
    {

    }


    private function getElements()
    {
        $allInputs = $this->elements;
    }


    public function getModel()
    {
        return $this->_model;
    }


    private function setForm()
    {
        $this->form = new CActiveForm();
        $this->form->enableAjaxValidation = true;
        $this->form->id = $this->formid;
        $this->form->clientOptions = [
            'validateOnSubmit'=>true,
        ];
    }


    private function getForm()
    {
        return $this->form;
    }


    private function formAttributes()
    {
        return array(

        );
    }

    public function excludeAttributes()
    {

    }

    public function formContainerStart()
    {
        return '<div class="form">';
    }


    public function formContainerEnd()
    {
        return '</div>';
    }


    public function formHead()
    {
        $options = $this->createOptions();
        return '<form '.$this->addClasses( $options ).'>';
    }


    public function createForm()
    {

    }


    public function formBody( $value, LazyElements $element=null )
    {
        $form = $this->form;
        $model = $this->getModel();
        if( !empty( $element->containerClass)){
            $o = '<div class="'.$element->containerClass.'">';
        }else{
            $o = '<div class="row">';
        }
        $o .= $this->getLabel( $model,$value, $element )  . '<br>';
        $o .= $this->getField($model, $value, $element );
        $o .= $form->error($model,$value);
        $o .= '</div>';
        return $o;
    }


    public function formGroupDiv( $class )
    {

    }


    /**
     * @param $model CActiveRecord
     * @param $value string
     * @param $element LazyElements
     * @return mixed
     */
    private function getField( $model, $value, $element )
    {
        if( !empty( $element) ){
            return $element->getFieldByType( $value );
        }else{
            return $this->form->textField($model, $value, array());
        }
    }



    private function getLabel( $model, $value, $element)
    {
        if(!empty($element->name)){
            return $element->name;
        }else{
           return $this->form->labelEx( $model, $value);
        }
    }


    private function getElementId( $value )
    {

    }


    public function formEnd()
    {
        return '</form>';
    }


    public function addButtons()
    {
        $o= '';
        $o .='<div class="'.$this->buttonsClass.'">';
        if( empty($this->buttons) ){
           $o .= $this->defaultButtons();
        }else{
          $o .=  $this->loadButtons();
        }
        $o .='</div>';
        return $o;
    }

    private function defaultButtons()
    {
        return CHtml::submitButton('Submit') .'&nbsp;' . CHtml::button('Reset');
    }


    private function loadButtons()
    {
        $o = '';
        foreach( $this->buttons as $name => $attributes ){
            $o .= $this->specialButtons(new LazyButtons($name, $attributes)) .' &nbsp;';
        }
        return $o;
    }


    private function specialButtons( LazyButtons $button )
    {
        return CHtml::button($button->btnName, $button->attributes());
    }



    public function renderContent()
    {
        $output = '<div class="form-summary">'.$this->addSummary().'</div>';
        $output .= $this->formHead();
        $output .= $this->getContent();
        if( $this->validation ){
            $output .= $this->form->run();
        }else{
            $output .= $this->formEnd();
        }
        echo $output;
    }

    public function addSummary(){
        if( $this->summaryText ){
            return $this->summaryText;
        }
    }



    public function getContent()
    {
        $output = $this->formContainerStart();
        if( !empty($this->elements) ){
            foreach( $this->elements as $key=>$element ){
                $output .= $this->formBody($key, new LazyElements($this->form, $this->model, $element ));
            }
        }else{
            foreach( $this->getAllAttributes() as $key=>$attribute){
                $output .= $this->formBody($key);
            }
        }
        $output .= $this->addButtons();
        $output .= $this->formContainerEnd();
        return $output;
    }



    public function getAllAttributes()
    {
        if( !empty($this->elements) ){

        }else{
            return $this->getModel()->attributes;
        }
    }


    private function addClasses( $options )
    {
        $classOptions = '';
        foreach( $options as $option=>$value){
            if( !empty( $value ) ){
                $classOptions .= $option.'='.'"'.$value.'"'.' ';
            }
        }
        return $classOptions;
    }

    private function createOptions()
    {
        return [
            'id' => $this->formid,
            'class' => $this->cssClass,
            'action' =>$this->getActionUrl(),
            'method' => $this->method
        ];
    }

    private function getActionUrl()
    {
        if( $this->action ){
            return $this->action;
        }else{
            return Yii::app()->request->requestUri;
        }
    }



}